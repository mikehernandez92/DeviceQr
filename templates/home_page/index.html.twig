{% extends 'base.html.twig' %}

{% block title %}Hello HomePageController!{% endblock %}

{% block body %}
<div class="container">
  <div class="row">
    
    <div class="col-md-12">
       <div id="loadingMessage">ðŸŽ¥ Unable to access video stream (please make sure you have a webcam enabled)</div>
    </div>

  </div>

  <div class="row">
    
    <div class="col-md-2 col-md-offset-5">
      <div class="form-group">
        <label for="cameras">Cameras</label>
        <select class="form-control" id="cameras" >
        </select>
      </div>
    </div>

  </div>

  <div class="row">
    
    <div class="col-md-6">
      <button type="button" class="btn btn-primary" onclick="startVideo()">Read device</button>
    </div>

    <div class="col-md-6">
      <div id="output" hidden>
          <div id="outputMessage">No QR code detected.</div>
          <div hidden><b>Data:</b> <span id="outputData"></span></div>
      </div>
    </div>
  </div>

  <div class="row">
    
    <div class="col-md-2 col-md-offset-5">
        <canvas id="canvas"  hidden width="300" height="300">
          Sorry, your browser doesn't support the &lt;canvas&gt; element.
        </canvas>
    </div>

  </div>

  <div class="row">
    <div class="col-md-12">
      <table class="table table-striped" id="devices">
        <thead>
          <tr>
            <th scope="col">#</th>
            <th scope="col">user</th>
            <th scope="col">Device id</th>
            <th scope="col">Device description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th scope="row">1</th>
            <td>Miguel Hernandez</td>
            <td>BT1234</td>
            <td>Galaxy</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>

</div>

<script type="text/javascript">

  var video = document.createElement("video");
    var canvasElement = document.getElementById("canvas");
    var canvas = canvasElement.getContext("2d");
    var loadingMessage = document.getElementById("loadingMessage");
    var outputContainer = document.getElementById("output");
    var outputMessage = document.getElementById("outputMessage");
    var outputData = document.getElementById("outputData");
    const select =document.getElementById("cameras");
    let currentStream;
    
    function addDevice(device){
       $('#devices').append("<tr><td>2</td><td>"+device+"</td><td>Iphone 7</td></tr>");
    }

    function drawLine(begin, end, color) {
      canvas.beginPath();
      canvas.moveTo(begin.x, begin.y);
      canvas.lineTo(end.x, end.y);
      canvas.lineWidth = 4;
      canvas.strokeStyle = color;
      canvas.stroke();
    }

    navigator.mediaDevices.enumerateDevices().then(gotDevices);

    function startVideo(){
      // Use facingMode: environment to attemt to get the front camera on phones
      console.log('getting video');
      navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {
      currentStream= stream;
      video.srcObject = stream;
      video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
      video.play();
      requestAnimationFrame(tick);
    });

    }

    function stopMediaTracks(stream) {
      stream.getTracks().forEach(track => {
        track.stop();
      });
    }

    function gotDevices(mediaDevices) {
      select.innerHTML = '';
      select.appendChild(document.createElement('option'));
      let count = 1;
      mediaDevices.forEach(mediaDevice => {
        if (mediaDevice.kind === 'videoinput') {
          const option = document.createElement('option');
          option.value = mediaDevice.deviceId;
          const label = mediaDevice.label || `Camera ${count++}`;
          const textNode = document.createTextNode(label);
          option.appendChild(textNode);
          select.appendChild(option);
        }
      });
    }
    function tick() {
      loadingMessage.innerText = "âŒ› Loading video..."
      if (video.readyState === video.HAVE_ENOUGH_DATA) {
        loadingMessage.hidden = true;
        canvasElement.hidden = false;
        outputContainer.hidden = false;
        //canvasElement.height = video.videoHeight;
        //canvasElement.width = video.videoWidth;
        canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
        var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
        var code = jsQR(imageData.data, imageData.width, imageData.height, {
          inversionAttempts: "dontInvert",
        });
        if (code) {
          drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
          drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
          drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
          drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");
          outputMessage.hidden = true;
          outputData.parentElement.hidden = false;
          outputData.innerText = code.data;
          stopMediaTracks(currentStream);
          addDevice(code.data);
        } else {
          outputMessage.hidden = false;
          outputData.parentElement.hidden = true;
        }
      }
      requestAnimationFrame(tick);
    }
    </script>
{% endblock %}
